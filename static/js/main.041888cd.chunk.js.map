{"version":3,"sources":["DiceModel/D4.ts","DiceModel/D6.ts","DiceModel/D8.ts","DiceModel/D10.ts","DiceModel/D20.ts","DiceModel/D100.ts","DiceModel/DiceBase.ts","DiceModel/DiceFactory.ts","UI/DicePicker.tsx","UI/DiceComponent.tsx","UI/DicePool.tsx","DiceModel/SWRPG-common.ts","UI/DiceResult.tsx","UI/DiceRoll.tsx","UI/HistogramChart.tsx","UI/ProbabilitiesView.tsx","UI/View.tsx","App.tsx","serviceWorker.ts","index.tsx","DiceModel/SWRPG.ts","DiceModel/index.ts","DiceModel/D2.ts","DiceModel/D3.ts"],"names":["D4","_NumericDice","Object","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","NumericDice","D6","D8","D10","D20","D100","DiceBase","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__","randomSeed","options","getSides","range","length","_DiceBase","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_0__","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","set","max","getFaceCount","i","face","push","DiceFactory","diceKinds","constructor","dice","getKey","instance","DiceCombo","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","onChange","event","option","index","props","onSelect","inherits","createClass","diceOptions","renderDiceOptions","react_default","a","createElement","ComboBox","selectedKey","selected","results","hasOwnProperty","text","React","Component","DicePicker","_React$Component2","_this2","onClick","onAdd","state","setState","getInstance","getDice","keys","className","DicePicker_DiceCombo","Button","label","disabled","DiceComponent","remove","theme","getTheme","getName","IconButton","styles","root","color","palette","blue","background","whiteTranslucent40","rootHovered","white","themeDarkAlt","iconProps","iconName","DicePool","content","activeDice","forEach","item","DiceComponent_DiceComponent","onRemove","glyphs","mapGlyph","identifier","count","glyph","repeat","Math","abs","toString","DiceResult","DiceRoll","DiceResult_DiceResult","rollDice","HistogramChart","labels","datasets","values","accum","accumulator","items","sort","b","parseInt","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","j","iterations","err","return","data","yAxisID","backgroundColor","borderColor","type","style","height","es","maintainAspectRatio","scales","yAxes","id","position","ticks","min","ProbabilitiesView","regenerate","histograms","name","newProps","Fragment","renderCharts","PrimaryButton","elements","element","HistogramChart_HistogramChart","rollOutCome","generateRoll","dimensions","getDimensions","getHistograms","iteration","outcomeFaces","indexOf","outcomes","dimension","dimensionName","getHistogram","histogram","diceRolls","iterationTotal","result","rolls","roll","View","onAddDice","onRemoveDice","splice","create","DicePicker_DicePicker","DicePool_DicePool","DiceRoll_DiceRoll","ProbabilitiesView_ProbabilitiesView","App","View_View","Boolean","window","location","hostname","match","initializeIcons","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","SWRPG_Purple","advantage","success","SWRPG_Green","_DiceBase2","SWRPG_Yellow","_DiceBase3","triumph","_D2__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_D3__WEBPACK_IMPORTED_MODULE_1__","_D4__WEBPACK_IMPORTED_MODULE_2__","_D6__WEBPACK_IMPORTED_MODULE_3__","_D8__WEBPACK_IMPORTED_MODULE_4__","_D10__WEBPACK_IMPORTED_MODULE_5__","_D20__WEBPACK_IMPORTED_MODULE_6__","_D100__WEBPACK_IMPORTED_MODULE_7__","_SWRPG__WEBPACK_IMPORTED_MODULE_8__","_DiceFactory__WEBPACK_IMPORTED_MODULE_9__","d","__webpack_exports__","RegisterDice","D2","D3","number"],"mappings":"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","file":"static/js/main.041888cd.chunk.js","sourcesContent":["import { NumericDice } from \"./DiceBase\";\r\n\r\nexport class D4 extends NumericDice {\r\n    getKey(): string {\r\n        return \"D4\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Four Sided Die\";\r\n    }\r\n\r\n    getFaceCount(): number {\r\n        return 4;\r\n    }\r\n}\r\n","import { NumericDice } from \"./DiceBase\";\r\n\r\nexport class D6 extends NumericDice {\r\n    getKey(): string {\r\n        return \"D6\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Six Sided Die\";\r\n    }\r\n\r\n    getFaceCount(): number {\r\n        return 6;\r\n    }\r\n}\r\n","import { NumericDice } from \"./DiceBase\";\r\n\r\nexport class D8 extends NumericDice {\r\n    getKey(): string {\r\n        return \"D8\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Eight Sided Die\";\r\n    }\r\n\r\n    getFaceCount(): number {\r\n        return 8;\r\n    }\r\n}\r\n","import { NumericDice } from \"./DiceBase\";\r\n\r\nexport class D10 extends NumericDice {\r\n    getKey(): string {\r\n        return \"D10\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Ten Sided Die\";\r\n    }\r\n\r\n    getFaceCount(): number {\r\n        return 10;\r\n    }\r\n}\r\n","import { NumericDice } from \"./DiceBase\";\r\n\r\nexport class D20 extends NumericDice {\r\n    getKey(): string {\r\n        return \"D20\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Twenty Sided Die\";\r\n    }\r\n\r\n    getFaceCount(): number {\r\n        return 20;\r\n    }\r\n}\r\n","import { NumericDice } from \"./DiceBase\";\r\n\r\nexport class D100 extends NumericDice {\r\n    getKey(): string {\r\n        return \"D100\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Hundred Sided Die\";\r\n    }\r\n\r\n    getFaceCount(): number {\r\n        return 100;\r\n    }\r\n}\r\n","import { Dice, Face } from \"./IDice\";\r\nimport { RandomSeed } from \"random-seed\";\r\n\r\nexport abstract class DiceBase implements Dice {\r\n    public abstract getKey(): string;\r\n    public abstract getName(): string;\r\n    public abstract getSides(): Face[];\r\n\r\n    public roll(randomSeed: RandomSeed): Face {\r\n        const options = this.getSides();\r\n        const selection = randomSeed.range(options.length);\r\n        return options[selection];\r\n    }\r\n}\r\n\r\nexport abstract class NumericDice extends DiceBase {\r\n    public abstract getFaceCount(): number;\r\n\r\n    public getSides(): Face[] {\r\n        const set: Face[] = [];\r\n        const max = this.getFaceCount();\r\n        for (let i = 1; i <= max; i++) {\r\n            const face = {\r\n                value: i,\r\n            } as Face;\r\n            set.push(face);\r\n        }\r\n        return set;\r\n    }\r\n\r\n    public roll(randomSeed: RandomSeed): Face {\r\n        const options = this.getSides();\r\n        const selection = randomSeed.range(options.length);\r\n        return options[selection];\r\n    }\r\n}\r\n","import { DiceConstructor, DiceKinds } from \"./IDice\";\r\n\r\n\r\nexport class DiceFactory {\r\n    private static instance: DiceFactory;\r\n    private diceKinds: DiceKinds;\r\n\r\n    private constructor() {\r\n        this.diceKinds = {};\r\n    }\r\n\r\n    static getInstance(): DiceFactory {\r\n        if (!DiceFactory.instance) {\r\n            DiceFactory.instance = new DiceFactory();\r\n        }\r\n        return DiceFactory.instance;\r\n    }\r\n\r\n    public getDice(): DiceKinds {\r\n        return this.diceKinds;\r\n    }\r\n\r\n    public RegisterDice(constructor: DiceConstructor<any>) {\r\n        const dice = new constructor();\r\n        this.diceKinds[dice.getKey()] = dice;\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport { DiceFactory, DiceKinds, Dice } from \"../DiceModel/index\";\r\nimport {\r\n    ComboBox,\r\n    IComboBox,\r\n    IComboBoxOption,\r\n    Button,\r\n} from \"office-ui-fabric-react/lib/index\";\r\n\r\nexport interface DiceComboProps {\r\n    diceKinds: DiceKinds;\r\n    selected?: Dice | undefined;\r\n    onSelect: (dice: Dice) => void;\r\n}\r\n\r\nexport class DiceCombo extends React.Component<DiceComboProps> {\r\n    public render(): JSX.Element {\r\n        const diceOptions = this.renderDiceOptions();\r\n        return (\r\n            <ComboBox\r\n                options={diceOptions}\r\n                selectedKey={\r\n                    this.props.selected && this.props.selected.getKey()\r\n                }\r\n                onChange={this.onChange}\r\n            />\r\n        );\r\n    }\r\n    private renderDiceOptions(): IComboBoxOption[] {\r\n        const results = [];\r\n        for (const key in this.props.diceKinds) {\r\n            if (this.props.diceKinds.hasOwnProperty(key)) {\r\n                results.push({\r\n                    key: key,\r\n                    text: key,\r\n                });\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    private onChange = (\r\n        event: React.FormEvent<IComboBox>,\r\n        option?: IComboBoxOption,\r\n        index?: number,\r\n        value?: string\r\n    ): void => {\r\n        this.props.onSelect(this.props.diceKinds[option!.key!]);\r\n    };\r\n}\r\n\r\nexport interface DicePickerProps {\r\n    onAdd(dice: Dice): void;\r\n}\r\ninterface DicePickerState {\r\n    dice: DiceKinds;\r\n    selected?: Dice;\r\n}\r\n\r\nexport class DicePicker extends React.Component<\r\n    DicePickerProps,\r\n    DicePickerState\r\n> {\r\n    constructor(props: Readonly<any>) {\r\n        super(props);\r\n        const dice = DiceFactory.getInstance().getDice();\r\n        this.state = {\r\n            dice: dice,\r\n            selected: dice[Object.keys(dice)[0]],\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"flex-horizontal\">\r\n                <DiceCombo\r\n                    diceKinds={this.state.dice}\r\n                    selected={this.state.selected}\r\n                    onSelect={this.onSelect}\r\n                />\r\n                <Button\r\n                    label=\"AddButton\"\r\n                    text=\"Add\"\r\n                    onClick={this.onClick}\r\n                    disabled={this.state.selected == null}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public onClick = (): void => {\r\n        this.props.onAdd(this.state.selected!);\r\n    };\r\n    public onSelect = (dice: Dice): void => {\r\n        this.setState({ selected: dice as any });\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { Dice } from \"../DiceModel/index\";\r\nimport { IconButton, getTheme } from \"office-ui-fabric-react/lib/index\";\r\n\r\ninterface DiceComponentProps {\r\n    dice: Dice;\r\n    index: number;\r\n    remove: (index: number) => void;\r\n}\r\n\r\nexport class DiceComponent extends React.Component<DiceComponentProps> {\r\n    public render(): JSX.Element {\r\n        const theme = getTheme();\r\n        return (\r\n            <div className=\"dice-component\">\r\n                {this.props.dice.getName()}\r\n                <IconButton\r\n                    text=\"Remove\"\r\n                    onClick={this.onClick}\r\n                    styles={{\r\n                        root: {\r\n                            color: theme.palette.blue,\r\n                            background: theme.palette.whiteTranslucent40,\r\n                        },\r\n                        rootHovered: {\r\n                            color: theme.palette.white,\r\n                            background: theme.palette.themeDarkAlt,\r\n                        },\r\n                    }}\r\n                    iconProps={{\r\n                        iconName: \"Delete\",\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    private onClick = (): void => {\r\n        this.props.remove(this.props.index);\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { Dice } from \"../DiceModel/index\";\r\nimport { DiceComponent } from \"./DiceComponent\";\r\nimport \"./DicePool.css\";\r\n\r\ninterface DicePoolProps {\r\n    activeDice: Dice[];\r\n    onRemove: (index: number) => void;\r\n}\r\nexport class DicePool extends React.Component<DicePoolProps> {\r\n    public render(): JSX.Element {\r\n        const content: JSX.Element[] = [];\r\n        this.props.activeDice.forEach((item, index) => {\r\n            content.push(\r\n                <DiceComponent\r\n                    dice={item}\r\n                    key={index}\r\n                    index={index}\r\n                    remove={this.props.onRemove}\r\n                />\r\n            );\r\n        });\r\n        return <div className=\"dice-pool flex-row\"> {content}</div>;\r\n    }\r\n}\r\n","export const advantage = \"advantage\";\r\nexport const success = \"success\";\r\nexport const number = \"number\";\r\n\r\nconst glyphs: { [key: string]: string } = {};\r\nglyphs[advantage] = \"A\";\r\nglyphs[number] = \"\";\r\nglyphs[success] = \"S\";\r\n\r\nexport function mapGlyph(identifier: string, count: number): string {\r\n    const glyph = glyphs[identifier];\r\n    return glyph != null ? glyph.repeat(Math.abs(count)) : count.toString();\r\n}\r\n","import React from \"react\";\r\nimport { Face } from \"../DiceModel/IDice\";\r\nimport { mapGlyph } from \"../DiceModel/SWRPG-common\";\r\nimport \"./DiceResult.css\";\r\n\r\ninterface DiceResultProps {\r\n    content: Face;\r\n}\r\nexport class DiceResult extends React.Component<DiceResultProps> {\r\n    public render(): JSX.Element {\r\n        const results = [];\r\n        for (const key in this.props.content) {\r\n            if (this.props.content.hasOwnProperty(key)) {\r\n                const count = this.props.content[key];\r\n                results.push(\r\n                    <span key={key} className=\"value\">\r\n                        {mapGlyph(key, count)}\r\n                    </span>\r\n                );\r\n            }\r\n        }\r\n        return <div className=\"dice-result\">{results}</div>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Dice, Face } from \"../DiceModel/index\";\r\nimport { RandomSeed } from \"random-seed\";\r\nimport { DiceResult } from \"./DiceResult\";\r\nimport \"./DiceRoll.css\";\r\n\r\ninterface DiceRollProps {\r\n    activeDice: Dice[];\r\n    randomSeed: RandomSeed;\r\n}\r\nexport class DiceRoll extends React.Component<DiceRollProps> {\r\n    public render(): JSX.Element {\r\n        const content: JSX.Element[] = [];\r\n        this.props.activeDice.forEach((dice, index) => {\r\n            content.push(\r\n                <DiceResult content={this.rollDice(dice)} key={index} />\r\n            );\r\n        });\r\n        return <div className=\"dice-roll flex-row\">{content}</div>;\r\n    }\r\n\r\n    private rollDice(dice: Dice): Face {\r\n        const options = dice.getSides();\r\n        const selection = this.props.randomSeed.range(options.length);\r\n        return options[selection];\r\n    }\r\n}\r\n","import { Bar } from \"react-chartjs-2\";\r\nimport React from \"react\";\r\n\r\nexport interface HistogramChartProps {\r\n    items: number[];\r\n    iterations: number;\r\n}\r\nexport class HistogramChart extends React.Component<HistogramChartProps> {\r\n    public render(): JSX.Element {\r\n        const labels = [];\r\n        const datasets = [];\r\n        const values: number[] = [];\r\n        const accum: number[] = [];\r\n\r\n        let accumulator = 0;\r\n\r\n        const keys = Object.keys(this.props.items).sort((a, b) => {\r\n            return parseInt(a) - parseInt(b);\r\n        });\r\n        for (const i of keys) {\r\n            labels.push(i + \"\");\r\n            const j = parseInt(i);\r\n            const value =\r\n                this.props.items[j] != null\r\n                    ? this.props.items[j] / this.props.iterations\r\n                    : 0;\r\n            accumulator += value;\r\n            values.push(value);\r\n            accum.push(accumulator);\r\n        }\r\n\r\n        datasets.push({\r\n            label: \"Probability\",\r\n            data: values,\r\n            yAxisID: \"A\",\r\n            backgroundColor: \"rgb(200, 200, 255)\",\r\n            borderColor: \"rgb(128, 128, 128)\",\r\n        });\r\n        datasets.push({\r\n            label: \"CDF\",\r\n            data: accum,\r\n            yAxisID: \"B\",\r\n            type: \"line\",\r\n            backgroundColor: \"rgb(255, 255, 255)\",\r\n            borderColor: \"rgb(128, 128, 128)\",\r\n        });\r\n        const chartOptions = {\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        id: \"A\",\r\n                        type: \"linear\",\r\n                        position: \"left\",\r\n                        ticks: {\r\n                            min: 0,\r\n                        },\r\n                    },\r\n                    {\r\n                        id: \"B\",\r\n                        type: \"linear\",\r\n                        position: \"right\",\r\n                        ticks: {\r\n                            min: 0,\r\n                        },\r\n                    },\r\n                ],\r\n            },\r\n        } as any;\r\n        return (\r\n            <div style={{ height: \"250px\" }}>\r\n                <Bar\r\n                    options={chartOptions}\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: datasets,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Dice, Face } from \"../DiceModel/index\";\r\nimport { RandomSeed } from \"random-seed\";\r\nimport { PrimaryButton } from \"office-ui-fabric-react\";\r\nimport { HistogramChart } from \"./HistogramChart\";\r\n\r\ninterface ProbabilitiesViewProps {\r\n    activeDice: Dice[];\r\n    randomSeed: RandomSeed;\r\n    iterations: number;\r\n}\r\nexport interface Histogram {\r\n    name: string;\r\n    data: number[];\r\n}\r\n\r\ninterface RollOutcome {\r\n    rollOutCome: Face[];\r\n}\r\n\r\ninterface ProbabilitiesViewState {\r\n    iterations: RollOutcome[];\r\n    histograms: Histogram[];\r\n}\r\n\r\nexport class ProbabilitiesView extends React.Component<\r\n    ProbabilitiesViewProps,\r\n    ProbabilitiesViewState\r\n> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            iterations: [],\r\n            histograms: [{ name: \"number\", data: [] }],\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.regenerate();\r\n    }\r\n\r\n    public componentDidUpdate(newProps: ProbabilitiesViewProps) {\r\n        if (newProps !== this.props) {\r\n            this.regenerate();\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                {this.state.histograms && this.renderCharts()}\r\n                <PrimaryButton onClick={this.onClick} text=\"Generate\" />\r\n            </>\r\n        );\r\n    }\r\n\r\n    private renderCharts(): JSX.Element[] {\r\n        const elements: JSX.Element[] = [];\r\n\r\n        for (const key in this.state.histograms) {\r\n            if (this.state.histograms.hasOwnProperty(key)) {\r\n                const element = this.state.histograms[key];\r\n\r\n                elements.push(\r\n                    <div key={key}>\r\n                        <span>{element.name}</span>\r\n                        <HistogramChart\r\n                            items={element.data}\r\n                            iterations={this.props.iterations}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return elements;\r\n    }\r\n\r\n    private onClick = (): void => {\r\n        this.regenerate();\r\n    };\r\n\r\n    private regenerate() {\r\n        const iterations = [];\r\n        for (let index = 0; index < this.props.iterations; index++) {\r\n            const rollOutCome = this.generateRoll();\r\n            iterations[index] = {\r\n                rollOutCome: rollOutCome,\r\n            };\r\n        }\r\n\r\n        const dimensions = this.getDimensions(iterations);\r\n        const histograms = this.getHistograms(iterations, dimensions);\r\n\r\n        this.setState({\r\n            iterations: iterations,\r\n            histograms: histograms,\r\n        });\r\n    }\r\n\r\n    private getDimensions(iterations: RollOutcome[]): string[] {\r\n        const dimensions: string[] = [];\r\n        for (let iteration = 0; iteration < iterations.length; iteration++) {\r\n            const outcomeFaces = iterations[iteration].rollOutCome;\r\n            for (let face = 0; face < outcomeFaces.length; face++) {\r\n                for (const key in outcomeFaces[face]) {\r\n                    if (outcomeFaces[face].hasOwnProperty(key)) {\r\n                        if (dimensions.indexOf(key) === -1) {\r\n                            dimensions.push(key);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return dimensions;\r\n    }\r\n\r\n    private getHistograms(\r\n        outcomes: RollOutcome[],\r\n        dimensions: string[]\r\n    ): Histogram[] {\r\n        const histograms = [];\r\n        for (let dimension = 0; dimension < dimensions.length; dimension++) {\r\n            const dimensionName = dimensions[dimension];\r\n            histograms.push({\r\n                name: dimensionName,\r\n                data: this.getHistogram(outcomes, dimensionName),\r\n            });\r\n        }\r\n        return histograms;\r\n    }\r\n\r\n    private getHistogram(\r\n        iterations: RollOutcome[],\r\n        dimension: string\r\n    ): number[] {\r\n        let histogram: number[] = [];\r\n\r\n        for (let index = 0; index < iterations.length; index++) {\r\n            const diceRolls = iterations[index].rollOutCome;\r\n            let iterationTotal = 0;\r\n\r\n            for (let face = 0; face < diceRolls.length; face++) {\r\n                const result = diceRolls[face][dimension];\r\n                if (result != null) {\r\n                    iterationTotal += result != null ? result : 0;\r\n                }\r\n            }\r\n\r\n            if (histogram[iterationTotal] == null) {\r\n                histogram[iterationTotal] = 1;\r\n            } else {\r\n                histogram[iterationTotal]++;\r\n            }\r\n        }\r\n        return histogram;\r\n    }\r\n\r\n    private generateRoll(): Face[] {\r\n        const rolls: any[] = [];\r\n        this.props.activeDice.forEach((item, index) => {\r\n            rolls.push(item.roll(this.props.randomSeed));\r\n        });\r\n        return rolls;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { DicePicker } from \"./DicePicker\";\r\nimport { Dice } from \"../DiceModel/index\";\r\nimport { DicePool } from \"./DicePool\";\r\nimport { DiceRoll } from \"./DiceRoll\";\r\nimport { ProbabilitiesView } from \"./ProbabilitiesView\";\r\nimport { RandomSeed, create } from \"random-seed\";\r\n\r\ninterface ViewState {\r\n    activeDice: Dice[];\r\n    randomSeed: RandomSeed;\r\n}\r\nexport class View extends React.Component<any, ViewState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            activeDice: [],\r\n            randomSeed: create(\"0\"),\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                <DicePicker onAdd={this.onAddDice} />\r\n                <DicePool\r\n                    activeDice={this.state.activeDice}\r\n                    onRemove={this.onRemoveDice}\r\n                />\r\n                <DiceRoll\r\n                    activeDice={this.state.activeDice as any}\r\n                    randomSeed={this.state.randomSeed}\r\n                />\r\n                <ProbabilitiesView\r\n                    activeDice={this.state.activeDice as any}\r\n                    randomSeed={this.state.randomSeed}\r\n                    iterations={50000}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n\r\n    public onAddDice = (dice: Dice): void => {\r\n        this.state.activeDice.push(dice);\r\n        this.setState({ activeDice: this.state.activeDice });\r\n    };\r\n\r\n    public onRemoveDice = (index: number): void => {\r\n        this.state.activeDice.splice(index, 1);\r\n        this.setState({ activeDice: this.state.activeDice });\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./common.css\";\r\nimport { View } from \"./UI/View\";\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <View />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\n\r\ninitializeIcons(/* optional base url */);\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { Face } from \"./IDice\";\r\nimport { DiceBase } from \"./DiceBase\";\r\n\r\nexport class SWRPG_Purple extends DiceBase {\r\n    getKey(): string {\r\n        return \"SWRPG_Purple\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"SWRPG_Purple\";\r\n    }\r\n\r\n    public getSides(): Face[] {\r\n        const set: Face[] = [\r\n            {\r\n                advantage: -1,\r\n            },\r\n            {\r\n                advantage: -1,\r\n            },\r\n            {\r\n                advantage: -1,\r\n            },\r\n            {},\r\n            {\r\n                success: -1,\r\n            },\r\n            {\r\n                advantage: -1,\r\n                success: -1,\r\n            },\r\n            {\r\n                advantage: -2,\r\n            },\r\n            {\r\n                success: -2,\r\n            },\r\n        ];\r\n        return set;\r\n    }\r\n}\r\n\r\nexport class SWRPG_Green extends DiceBase {\r\n    getKey(): string {\r\n        return \"SWRPG_Green\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"SWRPG_Green\";\r\n    }\r\n\r\n    public getSides(): Face[] {\r\n        const set: Face[] = [\r\n            {\r\n                success: 1,\r\n            },\r\n            {\r\n                advantage: 1,\r\n            },\r\n            {\r\n                advantage: 1,\r\n                success: 1,\r\n            },\r\n            {\r\n                success: 2,\r\n            },\r\n            {\r\n                advantage: 1,\r\n            },\r\n            {\r\n                success: 1,\r\n            },\r\n            {\r\n                advantage: 2,\r\n            },\r\n            {},\r\n        ];\r\n        return set;\r\n    }\r\n}\r\n\r\nexport class SWRPG_Yellow extends DiceBase {\r\n    getKey(): string {\r\n        return \"SWRPG_Yellow\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"SWRPG_Yellow\";\r\n    }\r\n\r\n    public getSides(): Face[] {\r\n        const set: Face[] = [\r\n            {\r\n                advantage: 2,\r\n            },\r\n            {\r\n                advantage: 1,\r\n            },\r\n            {\r\n                advantage: 2,\r\n            },\r\n            {\r\n                triumph: 1,\r\n            },\r\n            {\r\n                success: 1,\r\n            },\r\n            {\r\n                success: 1,\r\n                advantage: 1,\r\n            },\r\n            {\r\n                success: 1,\r\n            },\r\n            {\r\n                success: 1,\r\n                advantage: 1,\r\n            },\r\n            {\r\n                success: 2,\r\n            },\r\n            {\r\n                success: 1,\r\n                advantage: 1,\r\n            },\r\n            {\r\n                success: 2,\r\n            },\r\n            {},\r\n        ];\r\n        return set;\r\n    }\r\n}\r\n","import { D2 } from \"./D2\";\r\nimport { D3 } from \"./D3\";\r\nimport { D4 } from \"./D4\";\r\nimport { D6 } from \"./D6\";\r\nimport { D8 } from \"./D8\";\r\nimport { D10 } from \"./D10\";\r\nimport { D20 } from \"./D20\";\r\nimport { D100 } from \"./D100\";\r\nimport { SWRPG_Purple, SWRPG_Green, SWRPG_Yellow } from \"./SWRPG\";\r\nimport { DiceFactory } from \"./DiceFactory\";\r\n\r\nexport { DiceFactory };\r\nexport * from \"./IDice\";\r\n\r\nDiceFactory.getInstance().RegisterDice(D2);\r\nDiceFactory.getInstance().RegisterDice(D3);\r\nDiceFactory.getInstance().RegisterDice(D6);\r\nDiceFactory.getInstance().RegisterDice(D4);\r\nDiceFactory.getInstance().RegisterDice(D8);\r\nDiceFactory.getInstance().RegisterDice(D10);\r\nDiceFactory.getInstance().RegisterDice(D20);\r\nDiceFactory.getInstance().RegisterDice(D100);\r\n\r\nDiceFactory.getInstance().RegisterDice(SWRPG_Purple);\r\nDiceFactory.getInstance().RegisterDice(SWRPG_Green);\r\nDiceFactory.getInstance().RegisterDice(SWRPG_Yellow);\r\n","import { Face } from \"./IDice\";\r\nimport { DiceBase } from \"./DiceBase\";\r\n\r\nexport class D2 extends DiceBase {\r\n    getKey(): string {\r\n        return \"D2\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Coin\";\r\n    }\r\n\r\n    public getSides(): Face[] {\r\n        const set: Face[] = [\r\n            {\r\n                number: 0,\r\n            },\r\n            {\r\n                number: 1,\r\n            },\r\n        ];\r\n        return set;\r\n    }\r\n}\r\n","import { NumericDice } from \"./DiceBase\";\r\n\r\nexport class D3 extends NumericDice {\r\n    getKey(): string {\r\n        return \"D3\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Three Sided Die\";\r\n    }\r\n\r\n    getFaceCount(): number {\r\n        return 3;\r\n    }\r\n}\r\n"],"sourceRoot":""}