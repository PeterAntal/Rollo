{"version":3,"sources":["DiceModel/D10.ts","DiceModel/D20.ts","DiceModel/D100.ts","DiceModel/DiceBase.ts","UI/DicePicker.tsx","UI/DiceComponent.tsx","UI/DicePool.tsx","UI/DiceResult.tsx","UI/DiceRoll.tsx","UI/HistogramChart.tsx","UI/ProbabilitiesView.tsx","UI/View.tsx","App.tsx","serviceWorker.ts","index.tsx","DiceModel/DiceFactory.ts","DiceModel/index.ts","DiceModel/D4.ts","DiceModel/D6.ts","DiceModel/D8.ts"],"names":["D10","_DiceBase","Object","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Peter_s_Archive_dev_Jul_2018_Rollo_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","set","i","push","DiceBase","D20","D100","randomSeed","options","getSides","range","length","DiceCombo","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","onChange","event","option","index","props","onSelect","diceKinds","inherits","createClass","diceOptions","renderDiceOptions","react_default","a","createElement","ComboBox","selectedKey","selected","getKey","results","hasOwnProperty","text","React","Component","DicePicker","_React$Component2","_this2","onClick","onAdd","state","dice","setState","DiceFactory","getInstance","getDice","keys","className","DicePicker_DiceCombo","Button","label","disabled","DiceComponent","remove","theme","getTheme","getName","IconButton","styles","root","color","palette","blue","background","whiteTranslucent40","rootHovered","white","themeDarkAlt","iconProps","iconName","DicePool","content","activeDice","forEach","item","DiceComponent_DiceComponent","onRemove","DiceResult","DiceRoll","DiceResult_DiceResult","rollDice","HistogramChart","labels","datasets","values","accum","accumulator","items","iterations","data","yAxisID","backgroundColor","borderColor","type","style","height","es","maintainAspectRatio","scales","yAxes","id","position","ProbabilitiesView","regenerate","histogram","newProps","Fragment","HistogramChart_HistogramChart","PrimaryButton","rollOutCome","generateRoll","summary","summarize","bucketize","symbol","outcome","total","rolls","roll","View","onAddDice","onRemoveDice","splice","create","DicePicker_DicePicker","DicePool_DicePool","DiceRoll_DiceRoll","ProbabilitiesView_ProbabilitiesView","App","View_View","Boolean","window","location","hostname","match","initializeIcons","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","constructor","instance","_D4__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_D6__WEBPACK_IMPORTED_MODULE_1__","_D8__WEBPACK_IMPORTED_MODULE_2__","_D10__WEBPACK_IMPORTED_MODULE_3__","_D20__WEBPACK_IMPORTED_MODULE_4__","_D100__WEBPACK_IMPORTED_MODULE_5__","_DiceFactory__WEBPACK_IMPORTED_MODULE_6__","d","__webpack_exports__","RegisterDice","D6","D4","D8"],"mappings":"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","file":"static/js/main.c0010109.chunk.js","sourcesContent":["import { DiceBase } from \"./DiceBase\";\r\n\r\nexport class D10 extends DiceBase<number> {\r\n    getKey(): string {\r\n        return \"D10\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Ten Sided Die\";\r\n    }\r\n\r\n    getSides(): number[] {\r\n        const set = [];\r\n        for (let i = 1; i < 100; i++) {\r\n            set.push(i);\r\n        }\r\n        return set;\r\n    }\r\n}\r\n","import { DiceBase } from \"./DiceBase\";\r\n\r\nexport class D20 extends DiceBase<number> {\r\n    getKey(): string {\r\n        return \"D20\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Twenty Sided Die\";\r\n    }\r\n\r\n    getSides(): number[] {\r\n        const set = [];\r\n        for (let i = 1; i < 20; i++) {\r\n            set.push(i);\r\n        }\r\n        return set;\r\n    }\r\n}\r\n","import { DiceBase } from \"./DiceBase\";\r\n\r\nexport class D100 extends DiceBase<number> {\r\n    getKey(): string {\r\n        return \"D100\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Hundred Sided Die\";\r\n    }\r\n\r\n    getSides(): number[] {\r\n        const set = [];\r\n        for (let i = 1; i < 100; i++) {\r\n            set.push(i);\r\n        }\r\n        return set;\r\n    }\r\n}\r\n","import { DiceOf } from \"./IDice\";\r\nimport { RandomSeed } from \"random-seed\";\r\n\r\nexport abstract class DiceBase<T> implements DiceOf<T> {\r\n    public abstract getKey(): string;\r\n    public abstract getName(): string;\r\n    public abstract getSides(): T[];\r\n\r\n    public roll(randomSeed: RandomSeed): T {\r\n        const options = this.getSides();\r\n        const selection = randomSeed.range(options.length);\r\n        return options[selection];\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { DiceFactory, DiceKinds, Dice, DiceOf } from \"../DiceModel/index\";\r\nimport {\r\n    ComboBox,\r\n    IComboBox,\r\n    IComboBoxOption,\r\n    Button,\r\n} from \"office-ui-fabric-react/lib/index\";\r\n\r\nexport interface DiceComboProps {\r\n    diceKinds: DiceKinds;\r\n    selected?: Dice | undefined;\r\n    onSelect: (dice: Dice) => void;\r\n}\r\n\r\nexport class DiceCombo extends React.Component<DiceComboProps> {\r\n    public render(): JSX.Element {\r\n        const diceOptions = this.renderDiceOptions();\r\n        return (\r\n            <ComboBox\r\n                options={diceOptions}\r\n                selectedKey={\r\n                    this.props.selected && this.props.selected.getKey()\r\n                }\r\n                onChange={this.onChange}\r\n            />\r\n        );\r\n    }\r\n    private renderDiceOptions(): IComboBoxOption[] {\r\n        const results = [];\r\n        for (const key in this.props.diceKinds) {\r\n            if (this.props.diceKinds.hasOwnProperty(key)) {\r\n                results.push({\r\n                    key: key,\r\n                    text: key,\r\n                });\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    private onChange = (\r\n        event: React.FormEvent<IComboBox>,\r\n        option?: IComboBoxOption,\r\n        index?: number,\r\n        value?: string\r\n    ): void => {\r\n        this.props.onSelect(this.props.diceKinds[option!.key!]);\r\n    };\r\n}\r\n\r\nexport interface DicePickerProps {\r\n    onAdd(dice: DiceOf<any>): void;\r\n}\r\ninterface DicePickerState {\r\n    dice: DiceKinds;\r\n    selected?: DiceOf<any>;\r\n}\r\n\r\nexport class DicePicker extends React.Component<\r\n    DicePickerProps,\r\n    DicePickerState\r\n> {\r\n    constructor(props: Readonly<any>) {\r\n        super(props);\r\n        const dice = DiceFactory.getInstance().getDice();\r\n        this.state = {\r\n            dice: dice,\r\n            selected: dice[Object.keys(dice)[0]],\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"flex-horizontal\">\r\n                <DiceCombo\r\n                    diceKinds={this.state.dice}\r\n                    selected={this.state.selected}\r\n                    onSelect={this.onSelect}\r\n                />\r\n                <Button\r\n                    label=\"AddButton\"\r\n                    text=\"Add\"\r\n                    onClick={this.onClick}\r\n                    disabled={this.state.selected == null}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public onClick = (): void => {\r\n        this.props.onAdd(this.state.selected!);\r\n    };\r\n    public onSelect = (dice: Dice): void => {\r\n        this.setState({ selected: dice as any });\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { DiceOf } from \"../DiceModel/index\";\r\nimport { IconButton, getTheme } from \"office-ui-fabric-react/lib/index\";\r\n\r\ninterface DiceComponentProps {\r\n    dice: DiceOf<any>;\r\n    index: number;\r\n    remove: (index: number) => void;\r\n}\r\n\r\nexport class DiceComponent extends React.Component<DiceComponentProps> {\r\n    public render(): JSX.Element {\r\n        const theme = getTheme();\r\n        return (\r\n            <div className=\"dice-component\">\r\n                {this.props.dice.getName()}\r\n                <IconButton\r\n                    text=\"Remove\"\r\n                    onClick={this.onClick}\r\n                    styles={{\r\n                        root: {\r\n                            color: theme.palette.blue,\r\n                            background: theme.palette.whiteTranslucent40,\r\n                        },\r\n                        rootHovered: {\r\n                            color: theme.palette.white,\r\n                            background: theme.palette.themeDarkAlt,\r\n                        },\r\n                    }}\r\n                    iconProps={{\r\n                        iconName: \"Delete\",\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    private onClick = (): void => {\r\n        this.props.remove(this.props.index);\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { Dice, DiceOf } from \"../DiceModel/index\";\r\nimport { DiceComponent } from \"./DiceComponent\";\r\nimport \"./DicePool.css\";\r\n\r\ninterface DicePoolProps {\r\n    activeDice: Dice[];\r\n    onRemove: (index: number) => void;\r\n}\r\nexport class DicePool extends React.Component<DicePoolProps> {\r\n    public render(): JSX.Element {\r\n        const content: JSX.Element[] = [];\r\n        this.props.activeDice.forEach((item, index) => {\r\n            content.push(\r\n                <DiceComponent\r\n                    dice={item as DiceOf<any>}\r\n                    key={index}\r\n                    index={index}\r\n                    remove={this.props.onRemove}\r\n                />\r\n            );\r\n        });\r\n        return <div className=\"dice-pool flex-row\"> {content}</div>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./DiceResult.css\";\r\n\r\ninterface DiceResultProps {\r\n    content: string;\r\n}\r\nexport class DiceResult extends React.Component<DiceResultProps> {\r\n    public render(): JSX.Element {\r\n        return <div className=\"dice-result\">{this.props.content}</div>;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { DiceOf } from \"../DiceModel/index\";\r\nimport { RandomSeed } from \"random-seed\";\r\nimport { DiceResult } from \"./DiceResult\";\r\n\r\ninterface DiceRollProps {\r\n    activeDice: DiceOf<any>[];\r\n    randomSeed: RandomSeed;\r\n}\r\nexport class DiceRoll extends React.Component<DiceRollProps> {\r\n    public render(): JSX.Element {\r\n        const content: JSX.Element[] = [];\r\n        this.props.activeDice.forEach((dice, index) => {\r\n            content.push(\r\n                <DiceResult content={this.rollDice(dice)} key={index} />\r\n            );\r\n        });\r\n        return <div className=\"dice-roll flex-row\">{content}</div>;\r\n    }\r\n\r\n    private rollDice(dice: DiceOf<any>): string {\r\n        const options = dice.getSides();\r\n        const selection = this.props.randomSeed.range(options.length);\r\n        return options[selection];\r\n    }\r\n}\r\n","import { Bar } from \"react-chartjs-2\";\r\nimport React from \"react\";\r\n\r\nexport interface HistogramChartProps {\r\n    items: number[];\r\n    iterations: number;\r\n}\r\nexport class HistogramChart extends React.Component<HistogramChartProps> {\r\n    public render(): JSX.Element {\r\n        const labels = [];\r\n        const datasets = [];\r\n        const values = [];\r\n        const accum = [];\r\n\r\n        let accumulator = 0;\r\n\r\n        for (let i = 0; i < this.props.items.length; i++) {\r\n            labels.push(i + \"\");\r\n            const value =\r\n                this.props.items[i] != null\r\n                    ? this.props.items[i] / this.props.iterations\r\n                    : 0;\r\n            accumulator += value;\r\n            values.push(value);\r\n            accum.push(accumulator);\r\n        }\r\n\r\n        datasets.push({\r\n            label: \"My First dataset\",\r\n            data: values,\r\n            yAxisID: \"A\",\r\n            backgroundColor: \"rgb(200, 200, 255)\",\r\n            borderColor: \"rgb(128, 128, 128)\",\r\n        });\r\n        datasets.push({\r\n            label: \"My Second dataset\",\r\n            data: accum,\r\n            yAxisID: \"B\",\r\n            type: \"line\",\r\n            backgroundColor: \"rgb(255, 255, 255)\",\r\n            borderColor: \"rgb(128, 128, 128)\",\r\n        });\r\n        const chartOptions = {\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                yAxes: [\r\n                    {\r\n                        id: \"A\",\r\n                        type: \"linear\",\r\n                        position: \"left\",\r\n                    },\r\n                    {\r\n                        id: \"B\",\r\n                        type: \"linear\",\r\n                        position: \"right\",\r\n                    },\r\n                ],\r\n            },\r\n        } as any;\r\n        return (\r\n            <div style={{ height: \"500px\" }}>\r\n                <Bar\r\n                    options={chartOptions}\r\n                    data={{\r\n                        labels: labels,\r\n                        datasets: datasets,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { DiceOf } from \"../DiceModel/index\";\r\nimport { RandomSeed } from \"random-seed\";\r\nimport { PrimaryButton } from \"office-ui-fabric-react\";\r\nimport { HistogramChart } from \"./HistogramChart\";\r\n\r\ninterface ProbabilitiesViewProps {\r\n    activeDice: DiceOf<any>[];\r\n    randomSeed: RandomSeed;\r\n    iterations: number;\r\n}\r\ninterface RollOutcome {\r\n    rollOutCome: number[];\r\n    summary: number;\r\n}\r\n\r\ninterface ProbabilitiesViewState {\r\n    iterations: RollOutcome[];\r\n    histogram: number[];\r\n}\r\n\r\nexport class ProbabilitiesView extends React.Component<\r\n    ProbabilitiesViewProps,\r\n    ProbabilitiesViewState\r\n> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            iterations: [],\r\n            histogram: [],\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        this.regenerate();\r\n    }\r\n\r\n    public componentDidUpdate(newProps: ProbabilitiesViewProps) {\r\n        if (newProps !== this.props) {\r\n            this.regenerate();\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                {this.state.histogram && (\r\n                    <HistogramChart\r\n                        items={this.state.histogram}\r\n                        iterations={this.props.iterations}\r\n                    />\r\n                )}\r\n                <PrimaryButton onClick={this.onClick} text=\"Generate\" />\r\n            </>\r\n        );\r\n    }\r\n\r\n    private rollDice(dice: DiceOf<any>): JSX.Element {\r\n        const options = dice.getSides();\r\n        const selection = this.props.randomSeed(options.length);\r\n        return options[selection];\r\n    }\r\n\r\n    private onClick = (): void => {\r\n        this.regenerate();\r\n    };\r\n\r\n    private regenerate() {\r\n        const iterations = [];\r\n        for (let index = 0; index < this.props.iterations; index++) {\r\n            const rollOutCome = this.generateRoll();\r\n            iterations[index] = {\r\n                rollOutCome: rollOutCome,\r\n                summary: this.summarize(rollOutCome),\r\n            };\r\n        }\r\n\r\n        this.setState({\r\n            iterations: iterations,\r\n            histogram: this.bucketize(iterations),\r\n        });\r\n    }\r\n\r\n    private bucketize(iterations: RollOutcome[]): number[] {\r\n        let histogram: number[] = [];\r\n        for (let index = 0; index < iterations.length; index++) {\r\n            const symbol = iterations[index].summary;\r\n\r\n            if (histogram[symbol] == null) {\r\n                histogram[symbol] = 1;\r\n            } else {\r\n                histogram[symbol]++;\r\n            }\r\n        }\r\n\r\n        return histogram;\r\n    }\r\n\r\n    private summarize(outcome: number[]): number {\r\n        let total = 0;\r\n        for (let index = 0; index < outcome.length; index++) {\r\n            total += outcome[index];\r\n        }\r\n        return total;\r\n    }\r\n\r\n    private generateRoll(): any[] {\r\n        const rolls: any[] = [];\r\n        this.props.activeDice.forEach((item, index) => {\r\n            rolls.push(item.roll(this.props.randomSeed));\r\n        });\r\n        return rolls;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { DicePicker } from \"./DicePicker\";\r\nimport { Dice } from \"../DiceModel/index\";\r\nimport { DicePool } from \"./DicePool\";\r\nimport { DiceRoll } from \"./DiceRoll\";\r\nimport { ProbabilitiesView } from \"./ProbabilitiesView\";\r\nimport { RandomSeed, create } from \"random-seed\";\r\n\r\ninterface ViewState {\r\n    activeDice: Dice[];\r\n    randomSeed: RandomSeed;\r\n}\r\nexport class View extends React.Component<any, ViewState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            activeDice: [],\r\n            randomSeed: create(\"0\"),\r\n        };\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <>\r\n                <DicePicker onAdd={this.onAddDice} />\r\n                <DicePool\r\n                    activeDice={this.state.activeDice}\r\n                    onRemove={this.onRemoveDice}\r\n                />\r\n                <DiceRoll\r\n                    activeDice={this.state.activeDice as any}\r\n                    randomSeed={this.state.randomSeed}\r\n                />\r\n                <ProbabilitiesView\r\n                    activeDice={this.state.activeDice as any}\r\n                    randomSeed={this.state.randomSeed}\r\n                    iterations={10000 * (this.state.activeDice.length + 1)}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n\r\n    public onAddDice = (dice: Dice): void => {\r\n        this.state.activeDice.push(dice);\r\n        this.setState({ activeDice: this.state.activeDice });\r\n    };\r\n\r\n    public onRemoveDice = (index: number): void => {\r\n        this.state.activeDice.splice(index, 1);\r\n        this.setState({ activeDice: this.state.activeDice });\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./common.css\";\r\nimport { View } from \"./UI/View\";\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <View />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\n\r\ninitializeIcons(/* optional base url */);\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { DiceConstructor, DiceKinds } from \"./IDice\";\r\n\r\n\r\nexport class DiceFactory {\r\n    private static instance: DiceFactory;\r\n    private diceKinds: DiceKinds;\r\n\r\n    private constructor() {\r\n        this.diceKinds = {};\r\n    }\r\n\r\n    static getInstance(): DiceFactory {\r\n        if (!DiceFactory.instance) {\r\n            DiceFactory.instance = new DiceFactory();\r\n        }\r\n        return DiceFactory.instance;\r\n    }\r\n\r\n    public getDice(): DiceKinds {\r\n        return this.diceKinds;\r\n    }\r\n\r\n    public RegisterDice(constructor: DiceConstructor<any>) {\r\n        const dice = new constructor();\r\n        this.diceKinds[dice.getKey()] = dice;\r\n    }\r\n}","import { D4 } from \"./D4\";\r\nimport { D6 } from \"./D6\";\r\nimport { D8 } from \"./D8\";\r\nimport { D10 } from \"./D10\";\r\nimport { D20 } from \"./D20\";\r\nimport { D100 } from \"./D100\";\r\nimport { DiceFactory } from \"./DiceFactory\";\r\n\r\nexport { DiceFactory };\r\nexport * from \"./IDice\";\r\n\r\nDiceFactory.getInstance().RegisterDice(D6);\r\nDiceFactory.getInstance().RegisterDice(D4);\r\nDiceFactory.getInstance().RegisterDice(D8);\r\nDiceFactory.getInstance().RegisterDice(D10);\r\nDiceFactory.getInstance().RegisterDice(D20);\r\nDiceFactory.getInstance().RegisterDice(D100);\r\n","import { DiceBase } from \"./DiceBase\";\r\n\r\nexport class D4 extends DiceBase<number> {\r\n    getKey(): string {\r\n        return \"D4\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Four Sided Die\";\r\n    }\r\n\r\n    getSides(): number[] {\r\n        return [1, 2, 3, 4];\r\n    }\r\n}\r\n","import { DiceBase } from \"./DiceBase\";\r\n\r\nexport class D6 extends DiceBase<number> {\r\n    getKey(): string {\r\n        return \"D6\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Six Sided Die\";\r\n    }\r\n\r\n    getSides(): number[] {\r\n        return [1, 2, 3, 4, 5, 6];\r\n    }\r\n}\r\n","import { DiceBase } from \"./DiceBase\";\r\n\r\nexport class D8 extends DiceBase<number> {\r\n    getKey(): string {\r\n        return \"D8\";\r\n    }\r\n\r\n    getName(): string {\r\n        return \"Eight Sided Die\";\r\n    }\r\n\r\n    getSides(): number[] {\r\n        return [1, 2, 3, 4, 5, 6, 7, 8];\r\n    }\r\n}\r\n"],"sourceRoot":""}